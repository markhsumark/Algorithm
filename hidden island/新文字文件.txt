#include <iostream>
#include<vector>

using namespace std;

int find(vector<int> &vec, int x) {
	return vec[x] == x ? x : vec[x] = find(vec, vec[x]);
}

int main() {
	int n, i, j, x, y, quan = 0, matrix[1005][1005] = { 0 };
	int dir_x[4] = { 0,1,0,-1 };
	int dir_y[4] = { -1,0,1,0 };
	scanf("%d", &n);
	vector<int> parent;
	parent.push_back(0);
	for (i = 0; i < n; i++) {
		scanf("%d%d", &y, &x);
		if (matrix[y][x] != 0) {
			printf("%d\n", quan);
			continue;
		}
		vector<int> tmp;
		for (j = 0; j < 4; j++) {
			int v = matrix[y + dir_y[j]][x + dir_x[j]];
			if ( v != 0) {
				tmp.push_back(v);
			}
		}
		if (tmp.size() == 0) {
			matrix[y][x] = parent.size();
			parent.push_back(parent.size());
			quan++;
		}
		else {
			int p1 = find(parent, tmp.at(0));
			matrix[y][x] = p1;
			for (j = 1; j < tmp.size(); j++) {
				int p2 = find(parent, tmp.at(j));
				if (p1 != p2) {
					parent.at(p2) = parent.at(p1);
					quan--;
				}
			}
		}
		printf("%d\n", quan);
	}
}